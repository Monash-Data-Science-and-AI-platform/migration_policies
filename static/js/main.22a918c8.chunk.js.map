{"version":3,"sources":["../external \"Cesium\"","StoryPanel.js","Helper.js","CesiumViewer.js","Mediator.js","index.js"],"names":["module","exports","Cesium","StoryPanel","m_actionFilter","state","visible","id","props","paragraphs","res","i","this","length","push","content","text","actionFilter","setState","className","activeID","period","chapter","map","paragraph","key","panToFilter","highlightFilter","animation","yearStart","minYear","yearEnd","maxYear","updatePeriod","app","height","Component","StoryParagraph","m_firedAction","m_statusChanged","m_filterArray","handleScroll","event","topOffset","ReactDOM","findDOMNode","getBoundingClientRect","top","bottomOffset","bottom","highlighted","stopAnimation","doChapterAnimation","objects","highlightObjects","setActiveID","updateYears","panToCountry","country","paragraphChange","isIntersecting","window","removeEventListener","addEventListener","onChange","ReactHtmlParser","countries","getLocation","CesiumViewer","entities","action","name","console","log","getPropertyComparator","propers","type","admin","continent","subregion","getColor","HIGHLIGHT_WITH_POLICY","Color","ORANGE","withAlpha","HIGHLIGHT_NO_POLICY","ACTIVE_POLICY_ESTABLISHED_IN_PERIOD","AQUA","ACTIVE_HISTORICAL_POLICY","NOPOLICY","AQUAMARINE","TRANSPARENT","migrationpolicies","highlightCountries","hasActivePolicyInPeriod","policies","startPolicy","endPolicy","undefined","parseInt","substr","start","end","getPolicyText","infoBoxContent","element","viewerRef","React","createRef","sceneRef","fetch","process","then","response","json","initialize","features","feature","coords","geometry","coordinates","properties","flatcoords","flat","PolygonHierarchy","Cartesian3","fromDegreesArray","j","style","ref","e","viewer","timeline","homeButton","fullscreenButton","vrButton","scene3DOnly","baseLayerPicker","pointOfView","destination","fromDegrees","cesiumElement","scene","camera","positionCartographic","duration","entity","resizeInfoBox","hierarchy","fill","show","material","outline","PureComponent","Mediator","updateDimensions","width","innerWidth","innerHeight","panelHeight","sections","activeId","autoRotate","panelChanged","componentDidMount","sectiondata","renderparagraphs","createPanelContent","year","allPanels","helper","lat","lon","result","animate","replace","url","actions","k","highlight","keywords","panTo","min","max","lower","c","toUpperCase","section","title","NavMenuItem","selector","alignToTop","Legend","backgroundColor","Ion","defaultAccessToken","render","document","getElementById"],"mappings":"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","file":"static/js/main.22a918c8.chunk.js","sourcesContent":["module.exports = Cesium;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport Observer from '@researchgate/react-intersection-observer';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nexport default class StoryPanel extends Component {\r\n  //a storypanel is visible whenit enters the viewport until another enters.\r\n  m_actionFilter = null\r\n  state = {\r\n    visible: true,\r\n    id: this.props.id,\r\n    paragraphs: []\r\n  };\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    var res = [];\r\n    for (var i = 0; i < this.props.paragraphs.length; i++) {\r\n      res.push(\r\n        { \"text\": this.props.paragraphs[i].props.content.text, \"filter\": this.props.paragraphs[i].props.actionFilter }\r\n      )\r\n\r\n\r\n\r\n      this.setState({\r\n        paragraphs: res\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <section id={\"section_\" + this.state.id} className={`storyPanelSection ${this.state.visible && this.state.id === this.props.activeID ? 'activePanel' : 'inactivePanel'}`} >\r\n    \r\n\r\n         {this.props.period[0]!==0 ?\r\n          <div id={\"chap_\" + this.props.chapter} className={`sticky sectiontitle`}> {this.props.period[0]} - { this.props.period[1]}</div>\r\n\r\n         :\"\"}\r\n\r\n        <div className=\"panelcontent\">\r\n          {this.props.paragraphs.map(\r\n            (paragraph, i) =>\r\n\r\n              <StoryParagraph\r\n                key={\"chap_\" + this.props.chapter + \"_id_p\" + i}\r\n                //id={\"chap_\" + this.props.chapter + \"_id_p\" + i}\r\n                paragraph={paragraph.props.content.text}\r\n                panToFilter={paragraph.props.panToFilter}\r\n                highlightFilter={paragraph.props.highlightFilter}\r\n                animation = {paragraph.props.animation}\r\n                yearStart={paragraph.props.content.minYear}\r\n                yearEnd={paragraph.props.content.maxYear}\r\n                updatePeriod = { this.props.period[0]===0}\r\n                app={this.props.app}\r\n                id = {this.props.id}\r\n                height={this.props.height}\r\n\r\n              />\r\n\r\n          )}\r\n        </div>\r\n\r\n      </section>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nclass StoryParagraph extends Component {\r\n\r\n\r\n  m_firedAction = false\r\n  m_statusChanged = false\r\n\r\n\r\n  m_filterArray = [\"any\", []]\r\n  state = {\r\n    id: this.props.id,\r\n    visible: false\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  };\r\n\r\n\r\n  handleScroll = (event) => {\r\n    //if the element is visible we check where it is on the screen, and highlight it when it enters a threshold, dehighlight when it exits.\r\n    if (this.state.visible) {\r\n      let topOffset = ReactDOM.findDOMNode(this).getBoundingClientRect().top\r\n      let bottomOffset = ReactDOM.findDOMNode(this).getBoundingClientRect().bottom\r\n      //console.log(this.props.id + \" __ \" + topOffset + \" __ \" + bottomOffset)\r\n      //console.log(this.props.height)\r\n\r\n      //determine if the current paragraph should be highlighted. It should be highlighted if its beginning is visible on the main area of the page, OR, if the beginning is not visible, the bottom part of the paragraph\r\n      //is still the main object in the current view, which applies to long paragraphs.\r\n      //the border case of very very short paragraphs is prevented by adding an extra empty margin to the bottom of each paragraph, this could be a TODO to refine later if this is in any manner bad for the application.\r\n      if ((topOffset > 80 && topOffset < this.props.height*2/3 && bottomOffset > this.props.height/4) || (topOffset < 80 && bottomOffset > this.props.height/2) ) {\r\n        //if this paragraph has anactionFilter to it, apply it!\r\n        if (!this.state.highlighted) {\r\n          if(this.props.animation === true && !this.m_firedAction) {\r\n            this.props.app.doChapterAnimation(this.props.highlightFilter.objects)\r\n            this.m_firedAction = true\r\n          } else {\r\n            this.props.app.stopAnimation()\r\n          }\r\n         \r\n          this.setState({\r\n            highlighted: true\r\n          })\r\n          this.props.app.highlightObjects(this.props.highlightFilter.objects)\r\n          this.props.app.setActiveID(this.props.id)\r\n          //   console.log(this.props.yearStart)\r\n          this.props.app.updateYears(this.props.yearStart, this.props.yearEnd)\r\n          \r\n          if(this.props.panToFilter)\r\n            this.props.app.panToCountry(this.props.panToFilter.country)\r\n          \r\n        }\r\n\r\n\r\n      } else {\r\n\r\n        if (this.state.highlighted) {\r\n          //visible should update...\r\n          this.setState({\r\n            highlighted: false\r\n          })\r\n          //deactivate filter if thereisonw\r\n          this.m_firedAction = false\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.handleScroll);\r\n\r\n    //construct the filter if there is one\r\n    /*if (this.props.actionFilter) {\r\n      this.m_filterArray = [\"any\"]\r\n      //create the filter syntax fromthe actionFilter provided\r\n      for (var i = 0; i < this.props.actionFilter.types.length; i++) {\r\n        this.m_filterArray.push([\"==\", [\"get\", \"type\"], this.props.actionFilter.types[i]])\r\n      }\r\n      \r\n     \r\n    }*/\r\n  }\r\n\r\n  //gets called when the element intersects with Observer\r\n  paragraphChange = event => {\r\n    this.setState({\r\n      visible: event.isIntersecting\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      {this.props.updatePeriod ? \r\n          <div className={`sticky sectiontitle`}> {this.props.yearStart} - { this.props.yearEnd}</div>\r\n      : \r\n      \"\"}\r\n        <Observer\r\n          onChange={this.paragraphChange}\r\n        >\r\n\r\n          <p\r\n            className={`scrolltext ${this.state.highlighted ? \"active\" : \"\"}`}\r\n            id={this.props.id}>\r\n            {ReactHtmlParser(this.props.paragraph)}\r\n\r\n          </p>\r\n        </Observer>\r\n        </div>\r\n   \r\n    )\r\n  }\r\n}","\r\n\r\nconst countries =  {\r\n    \"Israel\": { \"lat\": 31.0461, \"lon\": 34.8516 },\r\n    \"Europe\": { \"lat\": 54.5260, \"lon\": 15.2551 },\r\n    \"China-Japan\": { \"lat\": 35.8617, \"lon\": 114.1954 },\r\n    \"India\": { \"lat\": 20.5937, \"lon\": 78.9629 },\r\n    \"Eritrea\": { \"lat\": 15.1794, \"lon\": 39.7823 },\r\n    \"Mexico\": { \"lat\": 23.6345, \"lon\": -102.5528},\r\n    \"Germany\": { \"lat\": 51.1657, \"lon\": 10.4515},\r\n    \"France\": { \"lat\": 46.2276, \"lon\": 2.2137},\r\n    \"Italy\": { \"lat\": 41.8719, \"lon\":12.5674},\r\n    \"China\":{\"lat\": 35.8617, \"lon\": 114.1954},\r\n    \"Japan\":{\"lat\": 36.2048, \"lon\": 138.2529},\r\n    \"Philippines\":{\"lat\":12.8797 , \"lon\": 121.7740},\r\n     \"Nepal\" :{\"lat\":28.3949 , \"lon\":84.1240 },\r\n    \"Bangladesh\" :{\"lat\":23.6850 , \"lon\": 90.3563},\r\n    \"Pakistan\":{\"lat\":30.3753 , \"lon\":69.3451 },\r\n    \"Hungary\":{ \"lat\": 51.1657, \"lon\": 10.4515},\r\n     \"Czech Republic\":{ \"lat\": 51.1657, \"lon\": 10.4515}, \"Estonia\":{ \"lat\":56.8796, \"lon\": 24.6032}, \"Latvia\":{ \"lat\":56.8796, \"lon\": 24.6032},\r\n      \"Lithuania\":{ \"lat\":56.8796, \"lon\": 24.6032},\r\n       \"Poland\":{ \"lat\": 51.1657, \"lon\": 10.4515}, \r\n       \"Slovakia\":{\"lat\": 51.1657, \"lon\": 10.4515}, \"Slovenia\": {\"lat\": 51.1657, \"lon\": 10.4515}, \"Ireland\":{\"lat\": 53.1424, \"lon\": -7.6921},\r\n        \"Portugal\":{\"lat\": 39.3999, \"lon\": -8.2245},\r\n       \"Central African Republic\": {\"lat\":6.6111,\"lon\":20.9394},\r\n       \"Brazil\":{\"lat\":-15.6280,\"lon\":-52.7226},\r\n       \"Cuba\":{\"lat\":21.5218,\"lon\":- 77.7812},\r\n       \"Africa\":{\"lat\":6.6111,\"lon\":20.9394},\r\n       \"South America\":{\"lat\":-15.6280,\"lon\":-52.7226},\r\n        \"Central Asia\": {\"lat\": 41.3775, \"lon\": 64.5853}\r\n}\r\nexport function getCountryLocations(){\r\n    return  countries\r\n}\r\n\r\nexport function getLocation(country){\r\n    return countries[country]\r\n}","import React, { Fragment, PureComponent } from 'react';\r\nimport { Viewer, Entity, PolygonGraphics, EntityDescription, CameraFlyTo } from 'resium';\r\nimport { Cartesian3, PolygonHierarchy, Color } from 'cesium';\r\n\r\n//import countries from \"./data/countries_min.geojson\"\r\nexport default class CesiumViewer extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.viewerRef = React.createRef();\r\n        this.sceneRef = React.createRef();\r\n    }\r\n\r\n\r\n    //admin: land\r\n    //continent\r\n    //subregion\r\n    state = {\r\n        entities: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        //convert country data to cesium entities.\r\n\r\n        fetch(process.env.PUBLIC_URL + \"/mergedMigrations.json\").then((response) => response.json()).then(countries => this.initialize(countries));\r\n\r\n    }\r\n\r\n    compnentDidUpdate() {\r\n        console.log(\"...\")\r\n    }\r\n    initialize(countries) {\r\n\r\n        let entities = []\r\n        let i\r\n        for (i = 0; i < countries.features.length; i++) {\r\n            let feature = countries.features[i]\r\n            let coords = feature.geometry.coordinates\r\n            let name = feature.properties.admin\r\n            let geometry\r\n            console.log(name)\r\n            if (feature.geometry.type === \"Polygon\") {\r\n                let flatcoords = coords[0].flat()\r\n\r\n                geometry = new PolygonHierarchy(Cartesian3.fromDegreesArray(flatcoords))\r\n                if (feature.properties.migrationpolicies) {\r\n\r\n                    entities.push({ country: name, name: name, geometry: geometry, properties: feature.properties })\r\n\r\n                }\r\n                // geometry = PolygonGeometry.createGeometry(hierarchy)\r\n            } else {\r\n                geometry = []\r\n                let flatcoords\r\n                for (let j = 0; j < coords.length; j++) {\r\n\r\n                    flatcoords = coords[j][0].flat()\r\n                    geometry = new PolygonHierarchy(Cartesian3.fromDegreesArray(flatcoords))\r\n                    if (feature.properties.migrationpolicies) {\r\n\r\n                        entities.push({ country: name, name: name + j, geometry: geometry, properties: feature.properties })\r\n\r\n                    }\r\n                    //  entities.push({ country: name, name: name + j, geometry: geometry, properties: feature.properties, popupText: this.getPolicyText(feature.properties.migrationpolicies) })\r\n                }\r\n\r\n                // entities.push({ name: name, children: children })\r\n            }\r\n\r\n        }\r\n        this.setState({\r\n            entities: entities\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div className=\"cesiumViewer\" style={{ height: this.props.height }}>\r\n\r\n            <Viewer\r\n                ref={e => { this.viewer = e }}\r\n                style={{ height: this.props.height - 100, }}\r\n                timeline={false}\r\n                homeButton={false}\r\n\r\n                fullscreenButton={false}\r\n                vrButton={false}\r\n                animation={false}\r\n                scene3DOnly={true}\r\n                baseLayerPicker={true}\r\n\r\n            >\r\n                {this.props.pointOfView ?\r\n                    <CameraFlyTo\r\n                        destination={Cartesian3.fromDegrees(this.props.pointOfView[1], this.props.pointOfView[0], this.viewer.cesiumElement.scene.camera.positionCartographic.height)}\r\n\r\n                        duration={3}\r\n                    />\r\n                    :\r\n                    \"\"\r\n                }\r\n                {this.state.entities.map(\r\n                    (entity, i) =>\r\n\r\n                        <Entity\r\n                            key={i}\r\n                            name={entity.country}\r\n                        //onMouseEnter={ () => this.action( entity.country,  \"Mouse Enter\")}\r\n                        //onMouseLeave={ () => this.action(entity.country,\"Mouse Leave\")}\r\n                        //onMouseDown={() => this.action(entity.country, entity.popupText)}\r\n\r\n                        >\r\n\r\n\r\n                            <EntityDescription\r\n                                resizeInfoBox={true}\r\n                            >\r\n                                {this.hasActivePolicyInPeriod(entity.properties.migrationpolicies) ?\r\n                                    this.getPolicyText(entity.properties.migrationpolicies)\r\n                                    :\r\n                                    <Fragment> No policy in current period.</Fragment>\r\n                                }\r\n\r\n                            </EntityDescription>\r\n\r\n\r\n\r\n                            <PolygonGraphics\r\n\r\n                                hierarchy={entity.geometry}\r\n                                fill={true}\r\n                                show={true}\r\n                                material={this.getColor(entity.properties)}\r\n                                outline={true}\r\n                                height={0}\r\n\r\n\r\n                            />\r\n\r\n\r\n\r\n\r\n                        </Entity>\r\n                )}\r\n\r\n            </Viewer>\r\n        </div>\r\n    }\r\n\r\n    action = (name, action) => {\r\n        console.log(name)\r\n        console.log(action)\r\n\r\n    }\r\n    getPropertyComparator = (propers, type) => {\r\n        //console.log(propers)\r\n        switch (type) {\r\n            case \"country\":\r\n                return propers.admin\r\n            case \"continent\":\r\n                return propers.continent\r\n            case \"subregion\":\r\n                return propers.subregion\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getColor = (propers) => {\r\n        const HIGHLIGHT_WITH_POLICY = Color.ORANGE.withAlpha(0.7)\r\n        const HIGHLIGHT_NO_POLICY = Color.ORANGE.withAlpha(0.4)\r\n        const ACTIVE_POLICY_ESTABLISHED_IN_PERIOD = Color.AQUA.withAlpha(0.7)\r\n        const ACTIVE_HISTORICAL_POLICY = Color.AQUA.withAlpha(0.4)\r\n\r\n        const ANIMATION_HIGHLIGHT_COLOR = Color.AQUAMARINE.withAlpha(0.7)\r\n\r\n        const NOPOLICY = Color.TRANSPARENT\r\n        //    console.log(this.props.highlightCountries)\r\n        if (propers.migrationpolicies) {\r\n            /*     if (this.props.animationHighlightCountry.name !== undefined && animationHighlightCountry.name === this.getPropertyComparator(propers, this.props.animationHighlightCountry.type)) {  //animation\r\n                      return helper.ANIMATION_HIGHLIGHT_COLOR\r\n                  }\r\n      */\r\n            for (let i = 0; i < this.props.highlightCountries.length; i++) {\r\n                if (this.props.highlightCountries[i].name === this.getPropertyComparator(propers, this.props.highlightCountries[i].type)) {\r\n                    //is country in the list of highlighted countries?\r\n                    //      console.log(this.props.highlightCountries[i].name)\r\n                    if (this.hasActivePolicyInPeriod(propers.migrationpolicies)) { // has an active policy\r\n                        //      console.log(\"highlight with policy\")\r\n                        return HIGHLIGHT_WITH_POLICY\r\n                    } else {\r\n                        //    console.log(\"highlight with no policy\")\r\n                        return HIGHLIGHT_NO_POLICY\r\n                    }\r\n                }\r\n\r\n            }\r\n            let policies = propers.migrationpolicies\r\n            for (let i = 0; i < policies.length; i++) {\r\n                let startPolicy = policies[i][\"Year of establishment\"]\r\n                let endPolicy = policies[i][\"Year of disestablishment\"]\r\n                if(propers.name===\"Afghanistan\"){\r\n                    console.log(policies)\r\n                }\r\n                if (startPolicy !== \"Nil\" && startPolicy !== undefined && endPolicy !== undefined) {\r\n\r\n                    if ((parseInt(startPolicy.substr(0, 4)) <= this.props.maxYear) && ((endPolicy === \"Nil\") || (parseInt(endPolicy.substr(0, 4)) >= this.props.minYear))) {\r\n                        //             console.log(\"has active Policy\")\r\n                        if (parseInt(startPolicy.substr(0, 4)) < this.props.minYear) {\r\n                            //      console.log(\"hhistorical policy\")\r\n                            return ACTIVE_HISTORICAL_POLICY  //active policy established before the period\r\n                        } else {\r\n                            //        console.log(\"established in period\")\r\n                            return ACTIVE_POLICY_ESTABLISHED_IN_PERIOD\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //    console.log(\"no policy\")\r\n        }\r\n\r\n        return NOPOLICY\r\n    }\r\n\r\n    hasActivePolicyInPeriod = (policies) => {\r\n        //console.log(\"...\")\r\n        if (policies) {\r\n\r\n            for (let i = 0; i < policies.length; i++) {\r\n                let start = policies[i][\"Year of establishment\"]\r\n                let end = policies[i][\"Year of disestablishment\"]\r\n\r\n                if (start !== \"Nil\" && start !== undefined && end !== undefined) {\r\n\r\n                    if ((parseInt(start.substr(0, 4)) <= this.props.maxYear) && ((end === \"Nil\") || (parseInt(end.substr(0, 4)) > this.props.minYear))) {\r\n                        //             console.log(\"has active Policy\")\r\n                        return true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    getPolicyText = (policies) => {\r\n          // console.log(policies)\r\n        if (policies) {\r\n            let infoBoxContent = []\r\n            for (let i = 0; i < policies.length; i++) {\r\n                let start = policies[i][\"Year of establishment\"]\r\n                let end = policies[i][\"Year of disestablishment\"]\r\n                if (start !== \"Nil\" && start !== undefined && end !== undefined) {\r\n                    if ((parseInt(start.substr(0, 4)) <= this.props.maxYear) && ((end === \"Nil\") || (parseInt(end.substr(0, 4)) > this.props.minYear))) {\r\n                    \r\n                    let element = <Fragment key={i}><h3>Institution Name:  </h3> {policies[i][\"Institution name\"]} <br /> <h4> {policies[i][\"Year of establishment\"]} -{policies[i][\"Year of disestablishment\"]}</h4> <h4>Institution Overview:  </h4>  {policies[i][\"Institution Overview\"]} </Fragment>\r\n                  //  console.log(element)\r\n                    infoBoxContent.push(element)\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n            //console.log(infoBoxContent)\r\n            return infoBoxContent\r\n        }\r\n        return <Fragment> No active Policy in this period. </Fragment>\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './css/index.css';\r\nimport StoryPanel from './StoryPanel.js'\r\nimport sectiondata from './data/sections.json'\r\nimport ScrollIntoView from 'react-scroll-into-view'\r\nimport * as helper from './Helper.js'\r\nimport CesiumViewer from './CesiumViewer.js' \r\nimport {Cartesian3} from 'cesium'\r\n\r\nexport default  class Mediator extends Component {\r\n    updateDimensions = () => {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight, panelHeight: window.innerHeight - 100 });\r\n\r\n    };\r\n    state = {\r\n        sections: [],\r\n        width: 0,\r\n        height: 0,\r\n        //the years should be read from a file with their corresponding html content\r\n        // sorteddata: [],\r\n        activeId: 0,\r\n        panelHeight: 800,\r\n        minYear: 1945,\r\n        maxYear: 2020,\r\n        pointOfView: null,\r\n        autoRotate: true,\r\n        highlightCountries: []\r\n\r\n    }\r\n    panelChanged = false\r\n    // m_mapFunctions = null\r\n    //\"Facility Name\", \"Status\", \"Region\", \"Technology\", \"Generator Capacity (MW)\", \"Latitude\", \"Longitude\"\r\n\r\n\r\n   componentDidMount = function () {\r\n        window.addEventListener('resize', this.updateDimensions);\r\n        this.updateDimensions()\r\n        let i\r\n        for (i = 0; i < sectiondata.sections.length; i++) {\r\n            sectiondata.sections[i].renderparagraphs = this.createPanelContent(sectiondata.sections[i].year, sectiondata.sections[i].paragraphs)\r\n\r\n        }\r\n        //   console.log(sectiondata.sections[4].renderparagraphs)\r\n        //read the content from file.\r\n        this.setState({\r\n            sections: sectiondata.sections\r\n        })\r\n\r\n\r\n       \r\n        //  console.log(sectiondata.sections)\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateDimensions);\r\n    }\r\n    allPanels = []\r\n    setActiveID = (id) => {\r\n\r\n        this.setState({\r\n            activeId: id\r\n        })\r\n    }\r\n\r\n\r\n    createPanelContent(year, paragraphs) {\r\n\r\n        //read the text from somewhere based on the given year\r\n        let result = [];\r\n\r\n        let key = \"\"\r\n        for (let i = 0; i < paragraphs.length; i++) {\r\n            key = year + \"_\" + i\r\n            let highlightFilter = {\r\n                \"objects\": []\r\n            }\r\n            let panToFilter = \"\";\r\n            let animate = false\r\n            //check for features like links, if its a link, replace the \"text\" with a hyperlinnk to the \"url\"\r\n            if (paragraphs[i].features) {\r\n                for (let j = 0; j < paragraphs[i].features.length; j++) {\r\n                    let feature = paragraphs[i].features[j]\r\n                    if (feature.type === \"link\") {\r\n                        paragraphs[i].text = paragraphs[i].text.replace(feature.text, '<a href=\"' + feature.url + '\" target=\"_blank\">' + feature.text + '</a>')\r\n                        //                console.log(paragraphs[i].text)\r\n                    }\r\n                }\r\n            }\r\n            //if actions aredefined, they are added to the element here.\r\n            if (paragraphs[i].actions) {\r\n                for (let j = 0; j < paragraphs[i].actions.length; j++) {\r\n                    let action = paragraphs[i].actions[j]\r\n                    if (action[\"highlight\"] !== undefined) {\r\n\r\n\r\n                        //highlight means highlight the words in the text with a class of the same name, and filter things on the map of this name\r\n                        for (let k = 0; k < action.highlight.keywords.length; k++) {\r\n                            //     console.log(action.highlight.keywords[k])\r\n                            paragraphs[i].text = paragraphs[i].text.replace(action.highlight.keywords[k].name, \"<span class='bold'>\" + action.highlight.keywords[k].name + \"</span>\")\r\n                            highlightFilter.objects.push(action.highlight.keywords[k])\r\n\r\n                            //capitalise first letter otherwise the filter breaks \r\n                        }\r\n                    }\r\n                    if (action[\"panTo\"] !== undefined) {\r\n                        panToFilter = {\r\n                            \"country\": action.panTo\r\n                        }\r\n                    }\r\n\r\n                    if (action[\"animation\"] !== undefined) {\r\n                        animate = true\r\n                    }\r\n                }\r\n\r\n            }\r\n            result.push(\r\n                <div content={paragraphs[i]} id={key} animation={animate} panToFilter={panToFilter} highlightFilter={highlightFilter} />\r\n            )\r\n        }\r\n        return result\r\n    }\r\n\r\n\r\n    panToCountry = (country) => {\r\n        if (country !== undefined && country !== null) {\r\n            console.log(\"should pan to country: \" + country)\r\n\r\n            this.setState({\r\n                pointOfView: [helper.getLocation(country).lat,  helper.getLocation(country).lon],\r\n                autoRotate: false,\r\n                animation: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                pointOfView: null,\r\n                autoRotate: true\r\n\r\n            })\r\n        }\r\n    }\r\n    highlightObjects(objects) {\r\n        //highlight countries on the globe\r\n        this.setState({\r\n            highlightCountries: objects\r\n        })\r\n    }\r\n\r\n    doChapterAnimation(objects) {\r\n        console.log(\"chapterAnimation\")\r\n        this.setState({\r\n            animation: true,\r\n            highlightCountries: objects\r\n        })\r\n    }\r\n\r\n    stopAnimation = () => {\r\n        this.setState({\r\n            animation: false\r\n        })\r\n    }\r\n    updateYears(min, max) {\r\n            console.log(\"update years: \" + min + \"   \" + max)\r\n        this.setState({\r\n            minYear: min,\r\n            maxYear: max\r\n        })\r\n    }\r\n    //capitalise the first letter of  string\r\n    cap(lower) {\r\n        return lower.replace(/^\\w/, c => c.toUpperCase());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"MainContainer\">\r\n\r\n                    <div className=\"navbar\" id=\"yearNav\">\r\n                        {this.state.sections.map(\r\n                            (section, i) =>\r\n                                <NavMenuItem\r\n                                    key={i}\r\n                                    id={i}\r\n                                    chapter={section.chapter}\r\n                                    name={section.title}\r\n                                    activeId={this.state.activeId}\r\n                                />\r\n                        )}\r\n                    </div>\r\n                    <div className=\"Panels topDistance\" style={{ height: this.state.panelHeight }}>\r\n\r\n                        {this.state.sections.map(\r\n                            (section, i) =>\r\n\r\n                                <StoryPanel\r\n                                    key={i}\r\n                                    id={i}\r\n                                    app={this}\r\n                                    activeID={this.state.activeId} //the Storypanels figure out if they are the active panel and display accordingly\r\n                                    title={section.title}\r\n                                    chapter={section.chapter}\r\n                                    paragraphs={section.renderparagraphs}\r\n                                    period={section.period}\r\n                                    height={this.state.height}\r\n                                />\r\n                        )}\r\n                    </div>\r\n    \r\n                     <CesiumViewer  \r\n                    height={this.state.height} \r\n                    minYear={this.state.minYear} \r\n                    maxYear={this.state.maxYear}\r\n                    highlightCountries= {this.state.highlightCountries}\r\n                    pointOfView = {this.state.pointOfView}\r\n                    />\r\n                    \r\n                    <Legend />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst NavMenuItem = ({ id, name, chapter, activeId }) => (\r\n\r\n    <ScrollIntoView\r\n        selector={`#chap_${chapter}`}\r\n        alignToTop={false} >\r\n        <div className={`navItem ${id === activeId ? \"navItemActive\" : \"\"} `}> {name} </div>\r\n    </ScrollIntoView>\r\n)\r\n\r\n\r\n\r\nconst Legend = ({ }) => {\r\n    return <div className=\"legend\">\r\n        <div className=\"legendItem\">\r\n            <div className=\"legendLabel\">Highlight</div><div className=\"legendColor\" style={{ backgroundColor: \"orange\"}} />\r\n        </div>\r\n        <div className=\"legendItem\">\r\n            <div className=\"legendLabel\">Established during period</div><div className=\"legendColor\" style={{ backgroundColor:  \"rgba(0,255,255,0.8)\"}} />\r\n        </div>\r\n        <div className=\"legendItem\">\r\n            <div className=\"legendLabel\">Established before period</div><div className=\"legendColor\" style={{ backgroundColor: \"rgba(0,255,255,0.4)\"}} />\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Mediator from './Mediator';\r\nimport {Ion}  from \"cesium\"\r\nIon.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIxNjdjMTU0Yi00MmQxLTRhM2MtYTFjZS02ZTgwZTViZDdkMjciLCJpZCI6MzczNzgsImlhdCI6MTYxMjc1MDgyMX0.Flj_3KxCUzLkIgFfnF1meU0Fw_WvYHsNPogyTGd6Jms';\r\n\r\n\r\n\r\nReactDOM.render(<Mediator />, document.getElementById('root'));\r\n"],"sourceRoot":""}